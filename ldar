#!/bin/sh
loc=0
header=2
get(){
	cat $source
}
loc(){
	loc=$(expr $loc + $1 )
}
part(){
	tailcut=$1
	headcut=$2
	get | head -c $headcut | tail -c $(expr $headcut - $tailcut )
}
unpack(){
	if [ -f $1 ]; then
		source=$1
	else
		echo "error: you can't unpack directory"
		exit 1
	fi
	if [ -z $2 ]; then
		mkdir $1-out
		output=$1-out
	else
		mkdir $2
		output=$2
	fi
	sizepoint=$(part 0 $header)
	loc $header
	while [ $loc -lt $(get | wc -c ) ]
	do
		size=$(part $loc $(expr $loc + $sizepoint))
		loc $sizepoint
		title=$(part $loc $(expr $loc + $size))
		loc $size
		size=$( part $loc $(expr $loc + $sizepoint))
		loc $sizepoint
		if [ -z $title ]; then
			echo error: title not empty
			echo cleaning...
			rm -r "$output"
			exit 1
		fi
		part $loc $(expr $loc + $size) > $output/$title
		echo unpacking file $title
		loc $size
	done
	cd $output
	for item in $(ls -a)
	do
		if [ "${item##*.}" = ldar ]; then
			loc=0
			unpack "$item" "${item%.*}"
			echo unpacking folder "${item%.*}" as defined by "$item"
			cd ..
		fi
	done
	rm *.ldar
}
max(){
	echo finding largest file...
	max=0
	for file in $(find -type f)
	do
		tmp=$(cat $file | wc -c)
		[ ! $max -gt $tmp ] && max=$tmp
	done
	maxlenght=$(echo $max | wc -c)
}
###
rpack(){
	echo packing $1
	folder="$1"
	foldername=$(basename $folder)
	name=$foldername.ldar
	cd $folder
	for item in $(ls -A)
	do
		if [ -d $item ]; then
				rpack $item
				cd ..
		fi
	done
	#reset stuff because rpack function executed in above loop sets them for itself
	folder="$1"
	foldername=$(basename "$1")
	name=$foldername.ldar
	#get biggest file for optimized size of archive
	max
	#make size point same lenght in all cases
	#in this case always 2 chars
	if [ ! $(expr $(echo $maxlenght | wc -c) - 1 ) = 2 ]; then
		sizepoint=0$maxlenght
	else
		sizepoint=$maxlenght
	fi
	#write sizepointer to archive
	echo -n $sizepoint >> ../$name
	#pack files themselves
	for item in $(ls -A)
	do
		echo adding $item
		if [ -f $item ]; then
			itemnamelenght=$(echo -n $item | wc -c)
			#make item name lenght always same lenght defined by max function
			until [ $(echo -n $itemnamelenght | wc -c ) = $maxlenght ]
			do
				itemnamelenght=0$itemnamelenght
			done
			#add item name to pack
			echo -n $itemnamelenght >> ../$name
			echo -n $item >> ../$name
			contentlenght=$(cat $item | wc -c)
			#make content lenght always same lenght defined by max function
			until [ $(echo -n $contentlenght | wc -c ) = $maxlenght ]
			do
				contentlenght=0$contentlenght
			done
			#add content of file to pack
			echo -n $contentlenght >> ../$name
			cat $item >> ../$name
		fi
	done
}
pack(){
	cur=$(realpath $PWD)
	#create temp file to work in
	if [ ! -d /tmp/ldar ]; then
		mkdir /tmp/ldar
	fi
	cp -r $1 /tmp/ldar/
	cd /tmp/ldar/
	rpack $1
	#move temp files to output
	mv /tmp/ldar/"$1.ldar" $cur
	rm -r /tmp/ldar
}
case "$1" in
	pack|unpack) $@;;
	*) echo "ldar: usage: ldar [ pack | unpack ] file...";;
esac
